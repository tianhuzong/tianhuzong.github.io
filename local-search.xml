<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Leetcode35——搜索插入位置</title>
    <link href="/2024/06/02/Leetcode35/"/>
    <url>/2024/06/02/Leetcode35/</url>
    
    <content type="html"><![CDATA[<h1 id="LeetCode35-搜索插入位置"><a href="#LeetCode35-搜索插入位置" class="headerlink" title="LeetCode35 搜索插入位置"></a>LeetCode35 搜索插入位置</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs md">给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。<br><br>请必须使用时间复杂度为 O(log n) 的算法。<br><br> <br><br>示例 1:<br><br>输入: nums = [1,3,5,6], target = 5<br>输出: 2<br>示例 2:<br><br>输入: nums = [1,3,5,6], target = 2<br>输出: 1<br>示例 3:<br><br>输入: nums = [1,3,5,6], target = 7<br>输出: 4<br> <br><br>提示:<br><br>1 &lt;= nums.length &lt;= 104<br>-104 &lt;= nums[i] &lt;= 104<br>nums 为 无重复元素 的 升序 排列数组<br>-104 &lt;= target &lt;= 104<br></code></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>本题采用二分查找法,通过维护left right 和 mid指针才查找</p><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><p>本题容易将left 和right指针边界弄错</p><h2 id="参考题解-CPP"><a href="#参考题解-CPP" class="headerlink" title="参考题解(CPP)"></a>参考题解(CPP)</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>    <span class="hljs-comment">/*初始化指针*/</span><br>    <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> right = nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span> ;<span class="hljs-comment">//注意，此处要减1</span><br>    <span class="hljs-type">int</span> mid;<br>    <span class="hljs-keyword">while</span> (left&lt;=right)&#123; <span class="hljs-comment">//如果right 是nums.size()-1的话要记得left是&lt;=</span><br>            <br>        mid = left + (right - left) / <span class="hljs-number">2</span>;<br>        <span class="hljs-comment">//判断当中指针的值等于目标直接返回下标</span><br>        <span class="hljs-keyword">if</span> (nums[mid] == target)&#123;<br>            <span class="hljs-keyword">return</span> mid;<br>        &#125;<br>        <span class="hljs-comment">//如果中间指针的值小于目标值,剔除左边部分</span><br>        <span class="hljs-keyword">if</span> (nums[mid] &lt; target)&#123;<br>            left = mid + <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-comment">//同理,如果中间指针的值大于目标值,剔除右边部分</span><br>        <span class="hljs-keyword">else</span>&#123;<br>            right = mid - <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//当left &gt; right 时,返回left,left就是插入位置的下标</span><br>    <span class="hljs-keyword">return</span> left ;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">searchInsert</span><span class="hljs-params">(vector&lt;<span class="hljs-type">int</span>&gt;&amp; nums, <span class="hljs-type">int</span> target)</span> </span>&#123;<br>    <span class="hljs-comment">/*初始化指针*/</span><br>    <span class="hljs-type">int</span> left = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> right = nums.<span class="hljs-built_in">size</span>()  ;<span class="hljs-comment">//注意，此处不要减1</span><br>    <span class="hljs-type">int</span> mid;<br>    <span class="hljs-keyword">while</span> (left&lt;=right)&#123; <span class="hljs-comment">//如果right 是nums.size()的话要记得left是&lt;</span><br>            <br>        mid = left + (right - left) / <span class="hljs-number">2</span>;<br>        <span class="hljs-comment">//判断当中指针的值等于目标直接返回下标</span><br>        <span class="hljs-keyword">if</span> (nums[mid] == target)&#123;<br>            <span class="hljs-keyword">return</span> mid;<br>        &#125;<br>        <span class="hljs-comment">//如果中间指针的值小于目标值,剔除左边部分</span><br>        <span class="hljs-keyword">if</span> (nums[mid] &lt; target)&#123;<br>            left = mid + <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-comment">//同理,如果中间指针的值大于目标值,剔除右边部分</span><br>        <span class="hljs-keyword">else</span>&#123;<br>            right = mid - <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//当left &gt; right 时,返回left,left就是插入位置的下标</span><br>    <span class="hljs-keyword">return</span> left ;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LeetCode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Leetcode</tag>
      
      <tag>二分查找</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好</title>
    <link href="/2024/04/14/%E4%BD%A0%E5%A5%BD/"/>
    <url>/2024/04/14/%E4%BD%A0%E5%A5%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="博客站开放啦！"><a href="#博客站开放啦！" class="headerlink" title="博客站开放啦！"></a>博客站开放啦！</h1><h2 id="今天，这个博客站搭建完成"><a href="#今天，这个博客站搭建完成" class="headerlink" title="今天，这个博客站搭建完成"></a>今天，这个博客站搭建完成</h2><h3 id="about"><a href="#about" class="headerlink" title="about"></a>about</h3><ul><li>email: <a href="mailto:&#x74;&#x69;&#97;&#x6e;&#104;&#117;&#x7a;&#x6f;&#x6e;&#x67;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;">&#x74;&#x69;&#97;&#x6e;&#104;&#117;&#x7a;&#x6f;&#x6e;&#x67;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;</a></li><li>github: <a href="https://github.com/tianhuzong">tianhuzong</a></li><li>爱发电 : <a href="https://afdian.net/a/thzsen">thzsen</a></li><li>bilibili : <a href="https://space.bilibili.com/3494354284972407">天狐宗仙</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>杂项</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
